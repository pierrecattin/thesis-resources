{
    "collab_server" : "",
    "contents" : "#' Compute lagged returns\n#' Compute lagged return each day up to a specified lag\n#'\n#' @param prices OLHCV prices series; xts\n#'\n#' @return xts with one column per lag. Index is same as index of prices.\n#' @export\n#'\ncompute.lagged.ret <- function(prices, max.lag=120){\n\n  all.days <- as.Date(time(prices))\n  days <- unique(all.days)\n\n  lagged.ret <- matrix(NA, ncol=max.lag, nrow=nrow(prices))\n  colnames(lagged.ret)<- paste0(\"lag \", 1:max.lag)\n  lagged.ret <- as.xts(lagged.ret, order.by=time(prices))\n  # d <- days[1]\n  pb.ind <- tkProgressBar(title = \"Computing lagged returns\", min = 0,\n                          max = length(days), width = 300)\n  d <- days[1]\n  for (d in days){\n    day.num <- which(days==d) # only for pb\n    setTkProgressBar(pb.ind, day.num, label=paste0(day.num, \"/\", length(days), \" days computed\"))\n    closes <- as.numeric(prices[all.days==d,\"close\"])\n\n    apply.fun <- function(n){\n      return(ROC(closes, n=n, type=\"discrete\"))\n    }\n    lagged.ret[all.days==d, ] <- sapply(X=1:max.lag, FUN=apply.fun)\n  }\n  close(pb.ind)\n  return(lagged.ret)\n}\n",
    "created" : 1527837466458.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "803189822",
    "id" : "72208D0B",
    "lastKnownWriteTime" : 1528375373,
    "last_content_update" : 1528375373386,
    "path" : "C:/Users/catti/Google Drive/Thesis/data_analysis/packages/thesis.resources/R/compute.lagged.ret.R",
    "project_path" : "R/compute.lagged.ret.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}